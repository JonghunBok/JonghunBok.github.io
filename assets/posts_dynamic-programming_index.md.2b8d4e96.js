import{_ as s,c as n,o as a,a as l}from"./app.70ff419d.js";const A=JSON.parse('{"title":"동적계획법에 대해","description":"","frontmatter":{"title":"동적계획법에 대해","tags":["algorithm","동적계획법","Dynamic Programming","다이나믹 프로그래밍","코딩테스트"],"date":"2019-09-21T01:29:15.000Z"},"headers":[{"level":2,"title":"선행 개념","slug":"선행-개념","link":"#선행-개념","children":[{"level":3,"title":"분할 정복","slug":"분할-정복","link":"#분할-정복","children":[]},{"level":3,"title":"중복 부분 문제","slug":"중복-부분-문제","link":"#중복-부분-문제","children":[]},{"level":3,"title":"메모이제이션","slug":"메모이제이션","link":"#메모이제이션","children":[]},{"level":3,"title":"참조적 투명성","slug":"참조적-투명성","link":"#참조적-투명성","children":[]},{"level":3,"title":"최적 부분 구조","slug":"최적-부분-구조","link":"#최적-부분-구조","children":[]}]},{"level":2,"title":"동적계획법이란","slug":"동적계획법이란","link":"#동적계획법이란","children":[]},{"level":2,"title":"메모이제이션에 대하여","slug":"메모이제이션에-대하여","link":"#메모이제이션에-대하여","children":[]},{"level":2,"title":"예시 문제 (1, 2, 3 더하기)","slug":"예시-문제-1-2-3-더하기","link":"#예시-문제-1-2-3-더하기","children":[{"level":3,"title":"풀이 1; 하향식 접근","slug":"풀이-1-하향식-접근","link":"#풀이-1-하향식-접근","children":[]},{"level":3,"title":"풀이 2; 상향식 접근","slug":"풀이-2-상향식-접근","link":"#풀이-2-상향식-접근","children":[]}]},{"level":2,"title":"풀어봄직한 문제","slug":"풀어봄직한-문제","link":"#풀어봄직한-문제","children":[]},{"level":2,"title":"읽어볼 자료","slug":"읽어볼-자료","link":"#읽어볼-자료","children":[]}],"relativePath":"posts/dynamic-programming/index.md"}'),p={name:"posts/dynamic-programming/index.md"},o=l(`<blockquote><p><em>&quot;(동적계획법은) 프로그래밍 대회 문제에 가장 자주 출현하는 디자인 패러다임&quot;</em><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p></blockquote><br><p>동적계획법을 공부하기 위해 먼저 알아두면 좋은 개념들을 살펴보고, 알고리즘 문제 해결을 위한 이론을 정리한 후에, 간단한 연습문제를 풀어 보았다.</p><hr><h2 id="선행-개념" tabindex="-1">선행 개념 <a class="header-anchor" href="#선행-개념" aria-hidden="true">#</a></h2><h3 id="분할-정복" tabindex="-1">분할 정복 <a class="header-anchor" href="#분할-정복" aria-hidden="true">#</a></h3><p>문제를 더 작은 부분 문제로 나누어 해결하고, 그 결과를 이용해 원래 문제의 답을 구하는 기법이다.</p><h3 id="중복-부분-문제" tabindex="-1">중복 부분 문제 <a class="header-anchor" href="#중복-부분-문제" aria-hidden="true">#</a></h3><p>문제를 부분 문제로 나누어 해결할 때 같은 부분 문제를 중복해 풀어야 하면, 문제가 중복 부분 문제를 가진다고 한다.</p><h3 id="메모이제이션" tabindex="-1">메모이제이션 <a class="header-anchor" href="#메모이제이션" aria-hidden="true">#</a></h3><p>한 번 계산된 함수의 결과값들을 저장해서 사용하는 최적화 기법이다.</p><h3 id="참조적-투명성" tabindex="-1">참조적 투명성 <a class="header-anchor" href="#참조적-투명성" aria-hidden="true">#</a></h3><p>표현식이 프로그램의 행동에 변화를 주지 않으면서, 그 결과값들로 완전히 대체될 수 있을 때 참조적으로 투명<sub>referentially transparent</sub>하다고 한다. 참조적으로 투명하기 위해선 표현식이 &#39;순수&#39;해야 한다.</p><h3 id="최적-부분-구조" tabindex="-1">최적 부분 구조 <a class="header-anchor" href="#최적-부분-구조" aria-hidden="true">#</a></h3><p><em>=Optimal Substructure</em>, 문제의 최적해가 부분 문제의 최적해들로부터 구축될 수 있다면 그 문제는 최적부분구조를 가진다고 한다.</p><hr><h2 id="동적계획법이란" tabindex="-1">동적계획법이란 <a class="header-anchor" href="#동적계획법이란" aria-hidden="true">#</a></h2><p>동적계획법<sub>Dynamic_Programming</sub>은</p><ul><li><strong>메모이제이션</strong>을 이용하는 <strong>분할정복</strong>이다.</li></ul><p>여기서 &#39;programming&#39;은 코딩같은 걸 말하는게 아니라 &#39;표&#39;를 사용하는 방법을 뜻하는데<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>, 메모이제이션이 일종의 표(주로 배열<sub>array</sub>이나 해쉬테이블<sub>hash table</sub>)를 사용하기 때문이다. 메모리를 더 사용해서 속도를 얻어내는 기법의 전형이다.</p><p>문제가 <strong>최적 부분 구조</strong>와 <strong>중복 부분 문제</strong>를 가진다면, 동적계획법을 고려해봐야 한다. 동적계획법은 다음의 4단계의 과정을 통해 사용된다.<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p><ol><li>최적해의 구조를 알아낸다.</li><li>최적해를 재귀적으로 정의한다. (<em>= 점화식을 찾는다</em>)</li><li>최적해의 값을 계산한다, 일반적으로 상향식으로 계산한다.</li><li>계산된 정보로부터 최적해를 만들어 낸다.</li></ol><blockquote><p>원문:</p><ol><li>Characterize the structure of an optimal solution.</li><li>Recursively define the value of an optimal solution.</li><li>Compute the value of an optimal solution, typically in a bottom-up fashion.</li><li>Construct an optimal solution from computed information.</li></ol></blockquote><p>3번 단계에서 추가적인 정보를 따로 저장하면, 4번 단계를 쉽게 수행할 수 있다. 만약 최적해의 &#39;값&#39;만 필요한 것이라면 4번 단계를 생략해도 좋다.</p><h2 id="메모이제이션에-대하여" tabindex="-1">메모이제이션에 대하여 <a class="header-anchor" href="#메모이제이션에-대하여" aria-hidden="true">#</a></h2><p>동적계획법에서 부분해를 얻는 함수를 사용할 때, 함수가 호출되는 문맥과 시기에 상관없이 최조로 계산되었던 값을 반환하기 때문에, 부분해를 구하는 함수가 <strong>참조적으로 투명</strong>해야 한다.</p><p>메모이제이션을 하는 방법은 두가지가 있다.</p><ol><li>하향식 <sub>top-down</sub> 최적해의 구조를 이용해 재귀함수를 만들고, 그 함수로 원하는 값을 계산하는 방법.</li><li>상향식 <sub>bottom-up</sub> 부분 문제를 크기 순으로 정렬하여, 순서대로 푸는 방법. 이렇게 하면 각 부분 문제를 풀 때 필요한 더 작은 부분 문제들은 이미 계산이 되어있게 된다. 주로 반복문을 사용해 구현한다.</li></ol><p>하향식으로 접근하는 게 논리적으로 자연스럽고 구현도 쉽다. 하지만 재귀함수로 구현을 하면 함수 호출로 인한 오버헤드가 발생하고, 드물게 모든 부분 문제를 풀지 않을 수 있기 때문에 주의가 필요하다. 문제 풀이를 할 때, 하향식으로 먼저 풀고 그 후에 상향식으로 다시 풀면 좋은 연습이 될 것이다.</p><h2 id="예시-문제-1-2-3-더하기" tabindex="-1">예시 문제 (1, 2, 3 더하기) <a class="header-anchor" href="#예시-문제-1-2-3-더하기" aria-hidden="true">#</a></h2><p>백준 사이트에서 <a href="https://www.acmicpc.net/problem/9095" target="_blank" rel="noreferrer">9095번 문제</a>를 풀어보자. 문제의 요구는 다음과 같다.</p><blockquote><p>정수 n이 주어졌을 때, n을 1, 2, 3의 합으로 나타내는 방법의 수를 구하는 프로그램을 작성하시오.</p></blockquote><p>이 문제를 하향식과 상향식으로 각각 한 번 씩 풀어보았다. 1. 문제 풀이법을 잠시 생각해보고, 2. 코드를 읽고 이해한 후에, 3. 처음부터 끝까지 직접 구현해보자.</p><h3 id="풀이-1-하향식-접근" tabindex="-1">풀이 1; 하향식 접근 <a class="header-anchor" href="#풀이-1-하향식-접근" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">iostream</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> dp</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">11</span><span style="color:#89DDFF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">count</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">n</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dp</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">n</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> dp</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">n</span><span style="color:#89DDFF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> dp</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">n</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">count</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">count</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">count</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> T</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  cin </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> T</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">--)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> n</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    cin </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#F07178;"> n</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">count</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">n</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="풀이-2-상향식-접근" tabindex="-1">풀이 2; 상향식 접근 <a class="header-anchor" href="#풀이-2-상향식-접근" aria-hidden="true">#</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">iostream</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> dp</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">11</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">  dp</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  dp</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  dp</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">dp</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">dp</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dp</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dp</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> T</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  cin </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> T</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">--)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> n</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    cin </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#F07178;"> n</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dp</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">n</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="풀어봄직한-문제" tabindex="-1">풀어봄직한 문제 <a class="header-anchor" href="#풀어봄직한-문제" aria-hidden="true">#</a></h2><ul><li><a href="https://www.acmicpc.net/problem/2579" target="_blank" rel="noreferrer">백준 2579번: 계단 오르기</a></li><li><a href="https://www.acmicpc.net/problem/11050" target="_blank" rel="noreferrer">백준 11050번: 이항 계수 1</a></li><li><a href="https://www.acmicpc.net/problem/11051" target="_blank" rel="noreferrer">백준 11051번: 이항 계수 2</a></li><li><a href="https://www.acmicpc.net/problem/1965" target="_blank" rel="noreferrer">백준 1965번: 상자넣기</a></li></ul><h2 id="읽어볼-자료" tabindex="-1">읽어볼 자료 <a class="header-anchor" href="#읽어볼-자료" aria-hidden="true">#</a></h2><ul><li><a href="https://en.wikipedia.org/wiki/Referential_transparency" target="_blank" rel="noreferrer">위키: 참조적 투명성</a></li><li><a href="https://en.wikipedia.org/wiki/Optimal_substructure" target="_blank" rel="noreferrer">위키: 최적부분구조</a></li><li><a href="https://en.wikipedia.org/wiki/Overlapping_subproblems" target="_blank" rel="noreferrer">위키: 중복부분문제</a></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><em>종만북 p.207</em> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><em>Introduction To Algorithm, 3rd Edition, p.359</em> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p><em>같은 책, 같은 쪽</em> <a href="#fnref3" class="footnote-backref">↩︎</a></p></li></ol></section>`,43),e=[o];function t(r,c,D,i,F,y){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
