import{_ as a,c as n,o as l,G as p}from"./chunks/framework.BuAPHyTs.js";const i=JSON.parse(`{"title":"왜 나는 넘버게임을 풀지 못했나","description":"","frontmatter":{"title":"왜 나는 넘버게임을 풀지 못했나","date":"2018-06-20T22:05:02.000Z","tags":"음 - algorithm - self-examination","intro":["동적계획법을 연습하는 문제 'NUMBERGAME'을 풀지 못했다.","정답과 나의 시도를 비교하며 내가 어떤 점을 놓쳤는지 살펴보려 한다.","이 문제를 이미 풀었거나, 풀려고 시도한 경험이 있는 사람을 독자로 상정했다.","문제는 아래 주소에서 확인할 수 있다.","-&nbsp;https://algospot.com/judge/problem/read/NUMBERGAME"]},"headers":[],"relativePath":"posts/numbergame-comment-md/index.md","filePath":"posts/numbergame-comment-md/index.md"}`),o={name:"posts/numbergame-comment-md/index.md"};function e(D,s,t,r,c,y){return l(),n("div",null,[...s[0]||(s[0]=[p(`<h2 id="나의-답안" tabindex="-1">나의 답안 <a class="header-anchor" href="#나의-답안" aria-label="Permalink to “나의 답안”">​</a></h2><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0" dir="ltr"><code><span class="line"><span style="color:#569CD6;">int</span><span style="color:#DCDCAA;"> doBest</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">int</span><span style="color:#9CDCFE;"> left</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">int</span><span style="color:#9CDCFE;"> right</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">int</span><span style="color:#9CDCFE;"> player</span><span style="color:#D4D4D4;">) { </span></span>
<span class="line"><span style="color:#569CD6;">    int</span><span style="color:#D4D4D4;">&amp; ret = </span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[left][right][player]; </span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">isCacheFilled</span><span style="color:#D4D4D4;">[left][right][player]) </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> ret; </span></span>
<span class="line"><span style="color:#D4D4D4;">     </span></span>
<span class="line"><span style="color:#569CD6;">     int</span><span style="color:#9CDCFE;"> case1</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">] = {left + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, right}; </span></span>
<span class="line"><span style="color:#569CD6;">     int</span><span style="color:#9CDCFE;"> case2</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">] = {left    , right - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">}; </span></span>
<span class="line"><span style="color:#569CD6;">     int</span><span style="color:#9CDCFE;"> case3</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">] = {left + </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, right}; </span></span>
<span class="line"><span style="color:#569CD6;">     int</span><span style="color:#9CDCFE;"> case4</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">] = {left    , right - </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">}; </span></span>
<span class="line"><span style="color:#D4D4D4;">                </span></span>
<span class="line"><span style="color:#D4D4D4;">    ret = </span><span style="color:#DCDCAA;">max</span><span style="color:#D4D4D4;">( </span></span>
<span class="line"><span style="color:#D4D4D4;">      - </span><span style="color:#DCDCAA;">doBest</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">case1</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">case1</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">], !player) + </span><span style="color:#9CDCFE;">numbers</span><span style="color:#D4D4D4;">[left], </span></span>
<span class="line"><span style="color:#D4D4D4;">      - </span><span style="color:#DCDCAA;">doBest</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">case2</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">case2</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">], !player) + </span><span style="color:#9CDCFE;">numbers</span><span style="color:#D4D4D4;">[right-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">], </span></span>
<span class="line"><span style="color:#D4D4D4;">      - </span><span style="color:#DCDCAA;">doBest</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">case3</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">case3</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">], !player) + </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">,  </span></span>
<span class="line"><span style="color:#D4D4D4;">      - </span><span style="color:#DCDCAA;">doBest</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">case4</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">case4</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">], !player) + </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">  </span></span>
<span class="line"><span style="color:#D4D4D4;">            ); </span></span>
<span class="line"><span style="color:#D4D4D4;">             </span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#D4D4D4;"> ret; </span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h2 id="모범-답안" tabindex="-1">모범 답안 <a class="header-anchor" href="#모범-답안" aria-label="Permalink to “모범 답안”">​</a></h2><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0" dir="ltr"><code><span class="line"><span style="color:#569CD6;">int</span><span style="color:#DCDCAA;"> play</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">int</span><span style="color:#9CDCFE;"> left</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">int</span><span style="color:#9CDCFE;"> right</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;">(left &gt; right) </span><span style="color:#C586C0;">return</span><span style="color:#B5CEA8;"> 0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;">    int</span><span style="color:#D4D4D4;">&amp; ret = </span><span style="color:#9CDCFE;">cache</span><span style="color:#D4D4D4;">[left][right];</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;">(ret != EMPTY) </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> ret;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    ret = </span><span style="color:#DCDCAA;">max</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">board</span><span style="color:#D4D4D4;">[left] - </span><span style="color:#DCDCAA;">play</span><span style="color:#D4D4D4;">(left + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, right),</span></span>
<span class="line"><span style="color:#9CDCFE;">          board</span><span style="color:#D4D4D4;">[right] - </span><span style="color:#DCDCAA;">play</span><span style="color:#D4D4D4;">(left, right - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;">(right - left + </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;"> &gt;= </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        ret = </span><span style="color:#DCDCAA;">max</span><span style="color:#D4D4D4;">(ret, -</span><span style="color:#DCDCAA;">play</span><span style="color:#D4D4D4;">(left + </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, right));</span></span>
<span class="line"><span style="color:#D4D4D4;">        ret = </span><span style="color:#DCDCAA;">max</span><span style="color:#D4D4D4;">(ret, -</span><span style="color:#DCDCAA;">play</span><span style="color:#D4D4D4;">(left, right - </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#D4D4D4;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#D4D4D4;"> ret;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h3 id="왜-나는-문제를-풀지-못했나" tabindex="-1">왜 나는 문제를 풀지 못했나 <a class="header-anchor" href="#왜-나는-문제를-풀지-못했나" aria-label="Permalink to “왜 나는 문제를 풀지 못했나”">​</a></h3><p>책과 나의 시도는 코드 자체도 상당히 유사하고, 접근법도 서로 같다. 그럼에도 불구하고 내가 답을 내지 못한 이유를 찾아보았다.</p><ol><li><strong>기저사례를 명확히 하지 못했음</strong><br>위에 쓴 코드에는 빠져있지만, 문제를 풀면서 기저사례 처리를 위해 이런저런 시도를 해보았지만 계속 확신이 없었다. 그 이유는 두번째 이유와 이어진다.</li><li><strong>함수 호출을 나누어 한다는 발상을 못했음</strong><br>나는 하나의 표현식 안에 모든 경우의 수를 전부 한 번에 인수로 전달하려고 애썼다. 굳이 그럴 필요는 없었는데 말이다. 특히 내가 정답의 10번 줄에 있는 표현식 처럼 max의 인수로 대입 연산자의 피연산자를 넣는 방식에 익숙치 않아서 더 그랬던 것 같다. <br>    그러다보니 left와 right와의 차이에 제약을 주지 못했다. 항상 case3와 case4까지 계산되다 보니 기저사례를 위한 조건식을 정할 때도 헷갈렸던 것 같다.</li></ol><h3 id="반성" tabindex="-1">반성 <a class="header-anchor" href="#반성" aria-label="Permalink to “반성”">​</a></h3><p>깔끔한 코드를 짜는 것에 집착했고, 게으르게 사고했다. 다음부턴 기능을 하는 코드를 짜는 것을 우선하고, 문제 풀이가 막히면 다시 처음부터 생각해보는 것을 두려워하지 않아야겠다.</p>`,9)])])}const E=a(o,[["render",e]]);export{i as __pageData,E as default};
